diff --git a/ckan/controllers/package.py b/ckan/controllers/package.py
index fb28d93..9250911 100644
--- a/ckan/controllers/package.py
+++ b/ckan/controllers/package.py
@@ -209,19 +209,21 @@ class PackageController(base.BaseController):
             c.fields_grouped = {}
             search_extras = {}
             fq = ''
+            fq_params = []
             for (param, value) in request.params.items():
                 if param not in ['q', 'page', 'limit', 'sort'] \
                         and len(value) and not param.startswith('_'):
                     if not param.startswith('ext_'):
                         c.fields.append((param, value))
-                        fq += ' %s:"%s"' % (param, value)
+                        fq_params.append('%s:"%s"' % (param, value))
                         if param not in c.fields_grouped:
                             c.fields_grouped[param] = [value]
                         else:
                             c.fields_grouped[param].append(value)
                     else:
                         search_extras[param] = value
-
+            if fq_params:
+                fq = '({})'.format(' OR '.join(fq_params))
             context = {'model': model, 'session': model.Session,
                        'user': c.user, 'for_view': True,
                        'auth_user_obj': c.userobj}
@@ -294,8 +296,24 @@ class PackageController(base.BaseController):
                 item_count=query['count'],
                 items_per_page=limit
             )
-            c.search_facets = query['search_facets']
             c.page.items = query['results']
+
+            data_dict_facets = {
+                'q': q,
+                'fq': '',
+                'facet.field': facets.keys(),
+                'rows': limit,
+                'start': (page - 1) * limit,
+                'sort': sort_by,
+                'extras': search_extras,
+                'include_private': asbool(config.get(
+                    'ckan.search.default_include_private', True)),
+            }
+
+            query = get_action('package_search')(context, data_dict_facets)
+
+            c.search_facets = query['search_facets']
+
         except SearchQueryError as se:
             # User's search parameters are invalid, in such a way that is not
             # achievable with the web interface, so return a proper error to
